'use strict'
if (typeof define !== 'function') { var define = require('amdefine')(module) }

define([
"path",
"fs",
"assert",
"rapydscript/test",
"../../../tools/node"
],

function (path, fs, assert, test, RapydScript) {

    function _$rapyd$_extends(child, parent) {
        child.prototype = Object.create(parent.prototype);
        child.prototype.constructor = child;
    }
    
    function Tests() {
        test.Tests.prototype.constructor.apply(this, arguments);
        this.options.amd = true;
    }

    _$rapyd$_extends(Tests, test.Tests);

    Tests.prototype.js_filepath = function js_filepath(file) {
        return path.join(this.test_dir, "node_modules", file)
                   .replace(this.options.ext, ".js");
    }
    
    Tests.prototype.compile_imports = function compile_imports(ast) {
        var dirname, base_path;
        var asts = RapydScript.get_import_ast(ast, this.options);
        for (var i in asts) {
            var iast = asts[i];
            var ioutput = RapydScript.OutputStream({
                screw_old_browsers: true,
                amd: true,
                beautify: true,
             });
             if (iast) {
                 iast["ast"].print(ioutput);
                 base_path = iast["path"];
                 dirname = path.dirname(base_path);
                 fs.mkdir(path.join(this.node_modules_dir, dirname))
                 fs.writeFileSync(path.join(this.node_modules_dir, base_path),
                                  ioutput.toString());
             }
        }
    }

    Tests.prototype.run_test_case = function run_test_case(output, file) {
        var module_name = file.replace(this.options.ext, "");
        var test_runner ="exports.run = function(){" +
                          "require('" + module_name + "');" +
                          "};";
                          
        // The actual test code.
        var filepath = this.js_filepath(file);
        fs.writeFileSync(filepath, output.toString());
        
        // Run the test code through the test runner.
        fs.writeFileSync(filepath+"test.js", test_runner);
        var testcase = require(filepath+"test.js");
        testcase.run();
    }

    return {
        Tests : Tests
    };

});
