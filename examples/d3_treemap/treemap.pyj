margin = {
    top: 40,
    right: 10,
    bottom: 10,
    left: 10
}
width = 960 - margin.left - margin.right
height = 500 - margin.top - margin.bottom

color = d3.scale.category20c()

treemap = d3.layout.treemap().size([ width, height ]).sticky(True)\
        .value(def(d):
    return d.size
)

div = d3.select("body").append("div").style("position", "relative").\
    style("width", width + margin.left + margin.right + "px").\
    style("height", height + margin.top + margin.bottom + "px").\
    style("left", margin.left + "px").style("top", margin.top + "px")

d3.json("flare.json", def(error, root):
    node = div.datum(root).selectAll(".node").data(treemap.nodes).\
        enter().append("div").attr("class", "node").call(position).\
        style("background", def(d):
        #Note: This is actually indented 1 level it's just not obvious
        if (d.children):
            return color(d.name)
        else:
            return None
    ).text(def(d):
        if (d.children):
            return None
        else:
            return d.name
    )
    d3.selectAll("input").on("change", def change():
        if (this.value is "count"):
            value = def():
                return 1
        else:
            value = def(d):
                return d.size

        node.data(treemap.value(value).nodes).transition().duration(1500).\
            call(position)
    )
)

def position():
    this.style("left", def(d): return d.x + "px"
    ).style("top", def(d): return d.y + "px"
    ).style("width", def(d): return Math.max(0, d.dx - 1) + "px"
    ).style("height", def(d): return Math.max(0, d.dy - 1) + "px"
    )

